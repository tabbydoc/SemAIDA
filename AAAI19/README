Our software settings:
    python 3.8
    tensorflow 2.6.0
    gensim 4.0.1
    python sparql-client 3.6
    sklearn 0.24.2

If you want to evaluate your results with .ipynb (jupyter notebook) file install pandas 1.4.2.

Requirements:
    wikipedia corpus (e.g., https://github.com/attardi/wikiextractor)
    pre-train word2vec (e.g., https://radimrehurek.com/gensim/models/word2vec.html)
    Pre-trained word2vec model by Wikipedia Dump: https://drive.google.com/open?id=1d_xrUPRLQjpcZrlm_cpKJO3jWBFKYhcl

Instructions:
    Step #0 (get okay ground truth classes):
        evaluate_infer_col_gt.py
            --> column_gt_extend_fg.csv

    Step #1 (sampling):
        sample_lookup.py
            --> lookup_entities.csv, lookup_classes.csv, lookup_col_classes.csv
        sample_particular.py
            --> particular_pos_samples.csv, particular_neg_samples.py
        sample_general.py
            --> general_pos_samples.csv

    Step #2 (training):
        train_cnn.py
            --> in_out/cnn/cnn_1_2_1.00/ (1: synthetic_column_size, 2: train_type, 1p.00: knowledge gap)

    Step #3 (prediction):
        predict_colnet.py
            --> predictions/p_cnn_1_2_1.00.csv
        predict_lookup.py (voting by entities matched by DBpedia lookup)
            --> predictions/p_lookup.csv
        predict_ensemble.py
            --> predictions/p_cnn_1_2_1.00_lookup.csv

    Step #4 (evaluation):
        evaluate_strict.py
        evaluate_tolerant.py

Note: to use sparql.query in python 3.8 go to sparql library
      [Right click to sparql library and find the IRI class]
      find the IRI class and change return of the __str__() function.
      From:
      def __str__(self):
            return self.value.encode("unicode-escape")

      to:
       def __str__(self):
            return self.value

